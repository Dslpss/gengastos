import dotenv from "dotenv";
import pkg from "pg";

const { Pool } = pkg;
dotenv.config();

// Configura√ß√£o do banco usando vari√°veis de ambiente
const pool = new Pool({
  host: process.env.DB_HOST || "aws-0-sa-east-1.pooler.supabase.com",
  port: parseInt(process.env.DB_PORT) || 6543,
  database: process.env.DB_NAME || "postgres",
  user: process.env.DB_USER || "postgres.wgfpxpgwwwrouizgpgfi",
  password: process.env.DB_PASSWORD || "Flamengo.019",
  ssl: {
    rejectUnauthorized: false,
  },
});

const defaultCategories = [
  // Categorias de Despesa
  { name: "Alimenta√ß√£o", color: "#EF4444", icon: "üçî", type: "expense" },
  { name: "Transporte", color: "#3B82F6", icon: "üöó", type: "expense" },
  { name: "Moradia", color: "#10B981", icon: "üè†", type: "expense" },
  { name: "Sa√∫de", color: "#F59E0B", icon: "üíä", type: "expense" },
  { name: "Educa√ß√£o", color: "#8B5CF6", icon: "üìö", type: "expense" },
  { name: "Lazer", color: "#EC4899", icon: "üéÆ", type: "expense" },
  { name: "Vestu√°rio", color: "#06B6D4", icon: "üëï", type: "expense" },
  { name: "Outros", color: "#6B7280", icon: "üìù", type: "expense" },

  // Categorias de Receita
  { name: "Sal√°rio", color: "#10B981", icon: "üí∞", type: "income" },
  { name: "Freelance", color: "#3B82F6", icon: "üíº", type: "income" },
  { name: "Investimentos", color: "#8B5CF6", icon: "üìä", type: "income" },
  { name: "Outros", color: "#6B7280", icon: "üí°", type: "income" },
];

async function addDefaultCategoriesForExistingUser() {
  try {
    console.log("üîç Buscando usu√°rios existentes...");

    // Buscar usu√°rio existente
    const usersQuery = await pool.query(
      "SELECT id, email FROM auth.users LIMIT 1"
    );

    if (usersQuery.rows.length === 0) {
      console.log("‚ö†Ô∏è  Nenhum usu√°rio encontrado");
      return;
    }

    const user = usersQuery.rows[0];
    console.log(`üë§ Usu√°rio encontrado: ${user.email} (${user.id})`);

    // Verificar se j√° tem categorias
    const existingCategories = await pool.query(
      "SELECT COUNT(*) as count FROM categories WHERE user_id = $1",
      [user.id]
    );

    if (parseInt(existingCategories.rows[0].count) > 0) {
      console.log(
        `‚ö†Ô∏è  Usu√°rio j√° possui ${existingCategories.rows[0].count} categorias`
      );
      return;
    }

    console.log("üè∑Ô∏è  Criando categorias padr√£o...");

    for (const category of defaultCategories) {
      await pool.query(
        "INSERT INTO categories (user_id, name, color, icon, type) VALUES ($1, $2, $3, $4, $5)",
        [user.id, category.name, category.color, category.icon, category.type]
      );
      console.log(`  ‚úÖ ${category.name} (${category.type})`);
    }

    console.log(
      `üéâ ${defaultCategories.length} categorias padr√£o criadas com sucesso!`
    );
  } catch (error) {
    console.error("‚ùå Erro:", error);
  } finally {
    await pool.end();
  }
}

addDefaultCategoriesForExistingUser();
